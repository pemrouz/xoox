var x=function(){"use strict";var t=(...t)=>(e,...n)=>t.reverse().reduce((t,e)=>e(t,...n),e);const e=(t,n,r,o=r.next())=>{if(o.then)return o.then(o=>e(t,n,r,o));for(;!o.done;){if(n=t(n,o.value),r.done)return n;if(n&&n.then&&!n.next)return n.then(n=>e(t,n,r));if((o=r.next()).then)return o.then(o=>e(t,n,r,o))}return n},n=(t,e)=>null==t?t:t.next?r(t.next(e),()=>t):t.call?(t(e),t):t.push?(t.push(e),t):t.concat?t.concat(e):t.toFixed?t+=e:(t[e[0]]=e[1],t),r=(t,e)=>t.next||!t.then?e(t):t.then(e),o=t=>(t.stopped=new Promise(e=>{t.stop=(()=>!t.done&&(t.done=!0)&&t.return&&e(t.return()))}),t);Object.prototype[Symbol.iterator]=function*(){for(entry of Object.entries(this))yield entry},Function.prototype[Symbol.iterator]=function(){return{next:()=>({value:this(),done:!1})}},Number.prototype[Symbol.iterator]=function*(t=0){for(;t++<this;)yield t};var i=t=>(e,n)=>t&&t.then?(t.then(n.stop),e):t&&t.each?(t.each(n.stop),e):(r,o)=>"number"==typeof t?(--t<=0&&n.stop(),t>=0?e(r,o):r):"function"==typeof t?t(o)?(n.stop(),r):e(r,o):0;const u=(t,e,n,r=n.next())=>{if(r.then)return r.then(r=>u(t,e,n,r));for(;!r.done;){if(e=t(e,r.value),n.done)return e;if(e&&e.then&&!e.next)return e.then(e=>u(t,e,n));if((r=n.next()).then)return r.then(r=>u(t,e,n,r))}return e},c=(t,e)=>null==t?t:t.next?s(t.next(e),()=>t):t.call?(t(e),t):t.push?(t.push(e),t):t.concat?t.concat(e):t.toFixed?t+=e:(t[e[0]]=e[1],t),s=(t,e)=>t&&t.then&&!t.next?t.then(e):e(t),l=t=>(t.stopped=new Promise(e=>{t.stop=(()=>!t.done&&(t.done=!0)&&t.return&&e(t.return()))}),t);Object.prototype[Symbol.iterator]=function*(){for(entry of Object.entries(this))yield entry},Function.prototype[Symbol.iterator]=function*(){for(;;)yield this()},Number.prototype[Symbol.iterator]=function*(t=0){for(;t++<this;)yield t};var p=x=((r,i=(r[Symbol.species]||r.constructor)(),u=o((r[Symbol.asyncIterator]||r[Symbol.iterator]).call(r)))=>(...r)=>e(t(...r)(n,u),i,u));return x.transform=x.x=x,x.compose=t,x.map=(t=>e=>(n,r)=>e(n,t(r))),x.until=i,x.filter=(t=>e=>(n,r)=>t(r)?e(n,r):n),x.flatten=((t,e)=>(n,r)=>(((t,e=(t[Symbol.species]||t.constructor)(),n=l((t[Symbol.asyncIterator]||t[Symbol.iterator]).call(t)))=>(...t)=>u(((...t)=>(e,...n)=>t.reverse().reduce((t,e)=>e(t,...n),e))(...t)(c,n),e,n))(r,e=>t(n,e))(i(e.stopped)),n)),p}();
